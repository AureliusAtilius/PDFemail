#!/usr/bin/env python3

import json
import locale
import sys


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = {"sales":0}
  popular_year ={}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # also handle max sales
    item_sales = item["total_sales"]
    if item_sales > max_sales["sales"]:
      max_sales= item
    # also handle most popular car_year
    if popular_year[item["car"]["car_year"]] not in popular_year:
      popular_year[item["car"]["car_year"]]= item["total_sales"]
    else:
      popular_year[item["car"]["car_year"]]+= item["total_sales"]
  line1= "The {} generated the most revenue: {}".format(format_car(max_revenue["car"]),max_revenue["revenue"]) 
  line2= "The {} had the most sales: {}".format(format_car(max_sales["car"]),max_sales["sales"])   
  pdf_lines=[]
            
